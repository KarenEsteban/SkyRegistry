--TABLAS
CREATE TABLE AVION(
MATRICULA INTEGER,
FABRICANTE VARCHAR2(100),
MODELO VARCHAR2(100),
AUTONOMIA VARCHAR2(100),
CAPACIDAD VARCHAR2(100), 
CONSTRAINT MATRICULA_PK PRIMARY KEY(MATRICULA));

CREATE TABLE VUELO(
ID_VUELO INTEGER,
FECHA VARCHAR2(100),
ORIGEN VARCHAR2(100),
DESTINO VARCHAR2(100),
MATRICULA INTEGER,
CONSTRAINT ID_VUELO_PK PRIMARY KEY(ID_VUELO),
CONSTRAINT MATRICULA_FK FOREIGN KEY(MATRICULA) 
REFERENCES AVION(MATRICULA)ON DELETE CASCADE);

CREATE TABLE PASAJERO(
ID_PASAJERO INTEGER,
NOMBRE VARCHAR2(100),
F_NAC VARCHAR2(100),
CLASE VARCHAR2(100), 
ASIENTO INTEGER,ID_VUELO INTEGER,
CONSTRAINT ID_PASAJERO_PK PRIMARY KEY(ID_PASAJERO),
CONSTRAINT ID_VUELO_FK FOREIGN KEY(ID_VUELO) 
REFERENCES VUELO(ID_VUELO)ON DELETE CASCADE);

CREATE TABLE EMPLEADOS(
ID_EMPLEADO INTEGER, 
NOMBRE VARCHAR2(100),
CATEGORIA VARCHAR2(100),
PUESTO VARCHAR2(100), 
ID_VUELO INTEGER,CONSTRAINT ID_EMPLEADO_PK PRIMARY KEY(ID_EMPLEADO),
CONSTRAINT ID_VUELO_FK2 FOREIGN KEY(ID_VUELO) 
REFERENCES VUELO(ID_VUELO) ON DELETE CASCADE);

CREATE TABLE USUARIOS(
ID_USUARIO INTEGER, 
LOGIN VARCHAR2(100),
PASSWORD VARCHAR2(100), 
CONSTRAINT ID_USUARIO_PK PRIMARY KEY(ID_USUARIO));

--SECUENCIAS
CREATE SEQUENCE SEC_AVION
START WITH 1
INCREMENT BY 1
NOMAXVALUE;

CREATE SEQUENCE SEC_VUELO
START WITH 1
INCREMENT BY 1
NOMAXVALUE;

CREATE SEQUENCE SEC_PASAJERO
START WITH 1
INCREMENT BY 1
NOMAXVALUE;

CREATE SEQUENCE SEC_EMPLEADOS
START WITH 1
INCREMENT BY 1
NOMAXVALUE;

CREATE SEQUENCE SEC_USUARIOS
START WITH 1
INCREMENT BY 1
NOMAXVALUE;

--PROCEDIMIENTOS

--GUARDAR AVION
CREATE OR REPLACE PROCEDURE GUARDAR_AVION
(
  MY_MATRICULA OUT NUMBER  
, MY_FABRICANTE IN VARCHAR2  
, MY_MODELO IN VARCHAR2
, MY_AUTONOMIA IN VARCHAR2
, MY_CAPACIDAD IN VARCHAR2  
) AS 
BEGIN
  SELECT SEC_AVION.NEXTVAL INTO MY_MATRICULA FROM DUAL;
  INSERT INTO AVION VALUES(MY_MATRICULA,MY_FABRICANTE,MY_MODELO,MY_AUTONOMIA,MY_CAPACIDAD);
END GUARDAR_AVION;
/

DECLARE
VALOR INTEGER;
BEGIN
GUARDAR_AVION(VALOR, 'BOEING','A10','20','100');
END;
/

--GUARDAR USUARIO
CREATE OR REPLACE PROCEDURE GUARDAR_USUARIOS
(
  MY_ID_USUARIO OUT NUMBER  
, MY_LOGIN IN VARCHAR2  
, MY_PASSWORD IN VARCHAR2  
) AS 
BEGIN
  SELECT SEC_USUARIOS.NEXTVAL INTO MY_ID_USUARIO FROM DUAL;
  INSERT INTO USUARIOS VALUES(MY_ID_USUARIO,MY_LOGIN,MY_PASSWORD);
END GUARDAR_USUARIOS;
/

DECLARE
VALOR INTEGER;
BEGIN
GUARDAR_USUARIOS(VALOR, 'Admin','123456');
END;
/

--GUARDAR VUELO
CREATE OR REPLACE PROCEDURE GUARDAR_VUELO
(
  MY_ID_VUELO OUT NUMBER

, MY_FECHA IN VARCHAR2  
, MY_ORIGEN IN VARCHAR2
, MY_DESTINO IN VARCHAR2
, MY_MATRICULA IN INTEGER
) AS 
BEGIN
  SELECT SEC_VUELO.NEXTVAL INTO MY_ID_VUELO FROM DUAL;
  INSERT INTO VUELO VALUES(MY_ID_VUELO,MY_FECHA,MY_ORIGEN,MY_DESTINO,MY_MATRICULA);
END GUARDAR_VUELO;
/

DECLARE
VALOR INTEGER;
BEGIN
GUARDAR_VUELO(VALOR,'01-04-17','MEXICO','CANADA',1);
END;
/

--GUARDAR PASAJERO
CREATE OR REPLACE PROCEDURE GUARDAR_PASAJERO
(
  MY_ID_PASAJERO OUT NUMBER

, MY_NOMBRE IN VARCHAR2  
, MY_F_NAC IN VARCHAR2
, MY_CLASE IN VARCHAR2
, MY_ASIENTO IN INTEGER
, MY_ID_VUELO IN INTEGER
) AS 
BEGIN
  SELECT SEC_PASAJERO.NEXTVAL INTO MY_ID_PASAJERO FROM DUAL;
  INSERT INTO PASAJERO VALUES(MY_ID_PASAJERO,MY_NOMBRE,MY_F_NAC,MY_CLASE,MY_ASIENTO,MY_ID_VUELO);
END GUARDAR_PASAJERO;
/

DECLARE
VALOR INTEGER;
BEGIN
GUARDAR_PASAJERO(VALOR,'ESTEBAN','14-11-95','TURISTA',2,1);
END;
/

--GUARDAR EMPLEADO
CREATE OR REPLACE PROCEDURE GUARDAR_EMPLEADOS
(
  MY_ID_EMPLEADO OUT NUMBER  

, MY_NOMBRE IN VARCHAR2  
, MY_CATEGORIA IN VARCHAR2
, MY_PUESTO IN VARCHAR2
, MY_ID_VUELO IN INTEGER
) AS 
BEGIN
  SELECT SEC_EMPLEADOS.NEXTVAL INTO MY_ID_EMPLEADO FROM DUAL;
  INSERT INTO EMPLEADOS VALUES(MY_ID_EMPLEADO,MY_NOMBRE,MY_CATEGORIA,MY_PUESTO,MY_ID_VUELO);
END GUARDAR_EMPLEADOS;
/

DECLARE
VALOR INTEGER;
BEGIN
GUARDAR_EMPLEADOS(VALOR,'JUAN TORRES','ATPL','PILOTO',1);
END;
/

--ACTUALIZAR VUELO
CREATE OR REPLACE PROCEDURE ACTUALIZAR_VUELO(
  MY_ID_VUELO IN NUMBER
, MY_FECHA IN VARCHAR2  
, MY_ORIGEN IN VARCHAR2
, MY_DESTINO IN VARCHAR2
, MY_MATRICULA IN INTEGER
)AS
BEGIN
UPDATE VUELO SET ID_VUELO=''||MY_ID_VUELO||'',FECHA=''||MY_FECHA||''
,ORIGEN=''||MY_ORIGEN||'',DESTINO=''||MY_DESTINO||'',MATRICULA=''||
MY_MATRICULA||'' WHERE ID_VUELO=MY_ID_VUELO AND MATRICULA=MY_MATRICULA;
END;
/

BEGIN ACTUALIZAR_VUELO(1,'08-04-17','ALEMANIA','CANADA',2);
END;
/

--ACTUALIZAR EMPLEADO
CREATE OR REPLACE PROCEDURE ACTUALIZAR_EMPLEADOS(
  MY_ID_EMPLEADO IN NUMBER  
, MY_NOMBRE IN VARCHAR2  
, MY_CATEGORIA IN VARCHAR2
, MY_PUESTO IN VARCHAR2
, MY_ID_VUELO IN INTEGER
)AS
BEGIN
UPDATE EMPLEADOS SET ID_EMPLEADO=''||MY_ID_EMPLEADO||'',NOMBRE=''||MY_NOMBRE||''
,CATEGORIA=''||MY_CATEGORIA||'',PUESTO=''||MY_PUESTO||'',ID_VUELO=''||MY_ID_VUELO||
'' WHERE ID_VUELO=MY_ID_VUELO AND ID_EMPLEADO=MY_ID_EMPLEADO;
END;
/

BEGIN ACTUALIZAR_EMPLEADOS(1,'JUAN','ATC','CO-PILOTO',2);
END;
/

--ACTUALIZAR PASAJERO
CREATE OR REPLACE PROCEDURE ACTUALIZAR_PASAJERO(
  MY_ID_PASAJERO OUT NUMBER
, MY_NOMBRE IN VARCHAR2  
, MY_F_NAC IN VARCHAR2
, MY_CLASE IN VARCHAR2
, MY_ASIENTO IN INTEGER
, MY_ID_VUELO IN INTEGER

)AS
BEGIN
UPDATE PASAJERO SET ID_PASAJERO=''||MY_ID_PASAJERO||'',NOMBRE=''||MY_NOMBRE||''
,F_NAC=''||MY_F_NAC||'',CLASE=''||MY_CLASE||'',ASIENTO=''||MY_ASIENTO||'',ID_VUELO=''
||MY_ID_VUELO||'' WHERE ID_VUELO=MY_ID_VUELO AND ID_PASAJERO=MY_ID_PASAJERO;
END;
/

BEGIN ACTUALIZAR_PASAJERO(1,'KAREN','14-11-95','PRIMERA',1);
END;
/

--ACTUALIZAR AVION
CREATE OR REPLACE PROCEDURE ACTUALIZAR_AVION(
  MY_MATRICULA IN NUMBER  
, MY_FABRICANTE IN VARCHAR2  
, MY_MODELO IN VARCHAR2
, MY_AUTONOMIA IN VARCHAR2
, MY_CAPACIDAD IN VARCHAR2  
)AS
BEGIN
UPDATE AVION SET MATRICULA=''||MY_MATRICULA||'',FABRICANTE=''||MY_FABRICANTE||''
,MODELO=''||MY_MODELO||'',AUTONOMIA=''||MY_AUTONOMIA||'',CAPACIDAD=''||MY_CAPACIDAD||'' 
WHERE MATRICULA=MY_MATRICULA;
END;
/
BEGIN ACTUALIZAR_AVION(1,'SAAB','B12',5,100);
END;


--TRIGGERS

--DISPARADOR1
CREATE OR REPLACE TRIGGER DISPARADOR1
AFTER INSERT ON AVION FOR EACH ROW
BEGIN
INSERT INTO VUELO VALUES(SEC_VUELO.NEXTVAL,100,:NEW.MATRICULA);
END DISPARADOR1;
/
--DISPARADOR2
CREATE OR REPLACE TRIGGER DISPARADOR2 
BEFORE INSERT ON AVION
FOR EACH ROW 
BEGIN
IF :NEW.CAPACIDAD > 100 THEN
RAISE_APPLICATION_ERROR(-20001, 'LA CAPACIDAD MAXIMA ES DE 100 PASAJEROS');
END IF;
END;
/
--DISPARADOR3
CREATE OR REPLACE TRIGGER DISPARADOR3 
BEFORE INSERT ON PASAJERO
FOR EACH ROW 
BEGIN
IF :NEW.ASIENTO > 100 THEN
RAISE_APPLICATION_ERROR(-20001, 'NUMERO DE ASIENTO INCORRECTO');
END IF;
END;
/
--DISPARADOR4
CREATE OR REPLACE TRIGGER DISPARADOR4
AFTER INSERT ON EMPLEADOS FOR EACH ROW
BEGIN
INSERT INTO VUELO VALUES(SEC_VUELO.NEXTVAL,300,:NEW.ID_EMPLEADO);
END DISPARADOR4;
/


